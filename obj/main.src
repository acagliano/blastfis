; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT STRSECT
L__0:
	DB	"AVData"
	DB	0
	SEGMENT DATA
_ScanDB:
	DW24	L__0
	SEGMENT STRSECT
L__1:
	DB	"AVDEFS"
	DB	0
	SEGMENT DATA
_VDefs:
	DW24	L__1
	SEGMENT STRSECT
L__2:
	DB	"AVSett"
	DB	0
	SEGMENT DATA
_AVSettings:
	DW24	L__2
	SEGMENT STRSECT
L__3:
	DB	"Blast"
	DB	0
	SEGMENT DATA
_ProgName:
	DW24	L__3
	SEGMENT STRSECT
L__4:
	DB	"Calculator Security Suite"
	DB	0
	SEGMENT DATA
_SubName:
	DW24	L__4
	SEGMENT STRSECT
L__5:
	DB	"0.7b"
	DB	0
	SEGMENT DATA
_Version:
	DW24	L__5
	SEGMENT BSS
_systemtime:
	DS	7
	SEGMENT DATA
_settingsSave:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DB	0
	DB	0
	DB	0
;    1	//--------------------------------------
;    2	// Program Name:
;    3	// Author:
;    4	// License:
;    5	// Description:
;    6	//--------------------------------------
;    7	
;    8	/* Keep these headers */
;    9	#include <stdbool.h>
;   10	#include <stddef.h>
;   11	#include <stdint.h>
;   12	#include <tice.h>
;   13	
;   14	
;   15	/* Standard headers - it's recommended to leave them included */
;   16	#include <math.h>
;   17	#include <stdio.h>
;   18	#include <stdlib.h>
;   19	#include <string.h>
;   20	
;   21	/* Other available headers */
;   22	// stdarg.h, setjmp.h, assert.h, ctype.h, float.h, iso646.h, limits.h, errno.h, debug.h
;   23	#define FORCE_INTERRUPTS
;   24	#include <graphx.h>
;   25	#include <fileioc.h>
;   26	#include <decompress.h>
;   27	#include <intce.h>
;   28	
;   29	#include "typedefs.h"
;   30	
;   31	/* Put your function prototypes here */
;   32	void av_CheckSumAll(void);
;   33	char av_ScanAll(void);
;   34	void pgrm_DrawSplashScreen(void);
;   35	char av_ValidateSaved(void);
;   36	void settings_SaveDate(void);
;   37	void settings_VerifyDate(void);
;   38	extern void SetHook();
;   39	extern void RemoveHook();
;   40	void pgrm_DrawSettingsMenu(void);
;   41	void pgrm_ApplySettings();
;   42	void pgrm_SaveSettings();
;   43	char pgrm_DrawMainMenu(void);
;   44	
;   45	
;   46	
;   47	#include "gfx/all_gfx.h"
;   48	/* Put all your globals here. */
;   49	const char *ScanDB = "AVData";
;   50	const char *VDefs = "AVDEFS";
;   51	const char *AVSettings = "AVSett";
;   52	const char *ProgName = "Blast";
;   53	const char *SubName = "Calculator Security Suite";
;   54	const char *Version = "0.7b";
;   55	
;   56	
;   57	
;   58	time_struct_t systemtime;
;   59	settings_save_t settingsSave = {0};
	SEGMENT CODE
;   60	
;   61	void main(void) {
_main:
	LD	HL,-7
	CALL	__frameset
	LD	BC,_settingsSave
	LD	(IX+-3),BC
	CALL	_asm_RunIndicOff
	CALL	_gfx_Begin
	LD	BC,240
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetClipRegion
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	CALL	_ti_CloseAll
	LD	BC,L__6
	PUSH	BC
	LD	BC,(_AVSettings)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
	OR	A,A
	JR	Z,L_1
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,_settingsSave
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
L_1:
	LD	BC,_systemtime+5
	PUSH	BC
	LD	BC,_systemtime+4
	PUSH	BC
	LD	BC,_systemtime+3
	PUSH	BC
	CALL	_boot_GetDate
	POP	BC
	POP	BC
	POP	BC
	LD	BC,_systemtime+2
	PUSH	BC
	LD	BC,_systemtime+1
	PUSH	BC
	LD	BC,_systemtime
	PUSH	BC
	CALL	_boot_GetTime
	POP	BC
	POP	BC
	POP	BC
	LD	IY,(IX+-3)
	LD	BC,(IY+5)
	LD	(IX+-7),C
	LD	(IX+-6),B
	LD	BC,(IX+-7)
	LD	HL,(_systemtime+5)
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_3
	LD	BC,(IX+-7)
	PUSH	BC
	LD	IY,(IX+-3)
	LD	C,(IY+4)
	LD	B,0
	PUSH	BC
	LD	C,(IY+3)
	PUSH	BC
	CALL	_boot_SetDate
	POP	BC
	POP	BC
	POP	BC
	LD	IY,(IX+-3)
	LD	C,(IY+2)
	LD	B,0
	PUSH	BC
	LD	C,(IY+1)
	PUSH	BC
	LD	C,(IY+0)
	PUSH	BC
	CALL	_boot_SetTime
	POP	BC
	POP	BC
	POP	BC
	JR	L_4
L_3:
	LD	A,(_systemtime+3)
	LD	IY,(IX+-3)
	LD	(IY+3),A
	LD	A,(_systemtime+4)
	LD	(IY+4),A
	LD	BC,(_systemtime+5)
	LD	(IY+5),C
	LD	(IY+6),B
	LD	A,(_systemtime)
	LD	(IY+0),A
	LD	A,(_systemtime+1)
	LD	(IY+1),A
	LD	A,(_systemtime+2)
	LD	(IY+2),A
L_4:
	CALL	_pgrm_ApplySettings
	CALL	_ti_CloseAll
di
	CALL	_pgrm_DrawSplashScreen
	JR	L_13
L_14:
	LD	A,(IX+-5)
	SEXT	HL
	LD	L,(IX+-5)
	LD	BC,HL
L__10:
	LD	DE,1
	OR	A,A
	SBC	HL,DE
	JR	C,L_13
	LD	HL,5
	OR	A,A
	SBC	HL,BC
	JR	C,L_13
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	LD	BC,L__9-3
	ADD	HL,BC
	LD	HL,(HL)
	JP	(HL)
L__9:
	DW24	L_5	

	DW24	L_6	

	DW24	L_7	

	DW24	L_8	

	DW24	L_9	

L_5:
	CALL	_av_ScanAll
	CALL	_gfx_ZeroScreen
	CALL	_pgrm_DrawSplashScreen
	JR	L_13
L_6:
	CALL	_av_ValidateSaved
	CALL	_gfx_ZeroScreen
	CALL	_pgrm_DrawSplashScreen
	JR	L_13
L_7:
	CALL	_av_CheckSumAll
	CALL	_gfx_ZeroScreen
	CALL	_pgrm_DrawSplashScreen
	JR	L_13
L_8:
	CALL	_pgrm_DrawSettingsMenu
	CALL	_gfx_ZeroScreen
	CALL	_pgrm_DrawSplashScreen
	JR	L_13
L_9:
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
	CALL	_gfx_ZeroScreen
	LD	BC,0
	PUSH	BC
	LD	BC,50
	PUSH	BC
	LD	BC,L__13
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,320
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,13
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__14
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,25
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__15
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,37
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__16
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,49
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__17
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,61
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__18
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,73
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__19
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,85
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__20
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,107
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__21
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,227
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__22
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
L_11:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_11
L_13:
	CALL	_pgrm_DrawMainMenu
	LD	(IX+-5),A
	CP	A,6
	JR	NZ,L_14
ei
	CALL	_ti_CloseAll
	CALL	_gfx_End
	CALL	_asm_ClrLCDFull
	CALL	_asm_DrawStatusBar
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_ClrLCDFull                     IMPORT  -----   function
;_gfx_End                            IMPORT  -----   function
;_pgrm_DrawMainMenu                  IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_pgrm_DrawSettingsMenu              IMPORT  -----   function
;_av_CheckSumAll                     IMPORT  -----   function
;_av_ValidateSaved                   IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_av_ScanAll                         IMPORT  -----   function
;_pgrm_DrawSplashScreen              IMPORT  -----   function
;_pgrm_ApplySettings                 IMPORT  -----   function
;_boot_SetTime                       IMPORT  -----   function
;_boot_SetDate                       IMPORT  -----   function
;_boot_GetTime                       IMPORT  -----   function
;_systemtime                         STATIC      7   variable
;_boot_GetDate                       IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_ti_Read                            IMPORT  -----   function
;_AVSettings                         STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;_gfx_SetClipRegion                  IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_asm_RunIndicOff                    IMPORT  -----   function
;_settingsSave                       STATIC     10   variable
;G_0                                   IX-7      2   variable
;option                                IX-5      1   variable
;settings                              IX-4      1   variable
;savedtime                             IX-3      3   variable


; Stack Frame Size: 13 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__6:
	DB	"r"
	DB	0
L__13:
	DB	"About Blast CSS"
	DB	0
L__14:
	DB	"Calculator Security for the TI-84+ CE"
	DB	0
L__15:
	DB	"- Retains checksums and sizes of all vars"
	DB	0
L__16:
	DB	"- Can verify both against current values"
	DB	0
L__17:
	DB	"- Scans all vars based on defs. file"
	DB	0
L__18:
	DB	"- Smartly records/restores time/date"
	DB	0
L__19:
	DB	"- Community-sourced malware defs."
	DB	0
L__20:
	DB	"More info @ http://clrhome.org/blastav"
	DB	0
L__21:
	DB	"by Anthony Cagliano"
	DB	0
L__22:
	DB	"Any key to return to main menu"
	DB	0
	SEGMENT CODE
_av_CheckSumAll:
	LD	HL,-21
	CALL	__frameset
	LEA	DE,IX+-18
	LD	HL,_0temp17
	LD	BC,2
	LDIR	
	LD	BC,L__26
	PUSH	BC
	LD	BC,(_ScanDB)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-10),A
	CALL	_ti_CloseAll
	PEA	IX+-14
	PEA	IX+-16
	PEA	IX+-15
	CALL	_boot_GetDate
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-10)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,4
	PUSH	BC
	PEA	IX+-16
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	CALL	_gfx_ZeroScreen
	LD	BC,0
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__27
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,320
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	(IX+-5),13
	LD	(IX+-4),0
	LD	(IX+-9),0
	JR	L_35
L_33:
	LD	BC,0
	LD	(IX+-21),BC
	JR	L_31
L_32:
	LD	BC,L__28
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_31
	LD	BC,L__30
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_31
	LD	BC,15
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-3),HL
	LD	BC,5
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_ti_OpenVar
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-11),A
	LD	BC,(IX+-5)
	CALL	__stoiu
	PUSH	HL
	LD	BC,5
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,15
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_memset
	POP	BC
	POP	BC
	POP	BC
	LD	IY,(IX+-3)
	LD	(IY+0),5
	LD	C,(IX+-11)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetSize
	POP	BC
	LD	IY,(IX+-3)
	LD	BC,HL
	LD	(IY+1),C
	LD	(IY+2),B
	LD	BC,(IX+-8)
	PUSH	BC
	PEA	IY+3
	CALL	_strcpy
	POP	BC
	POP	BC
	JR	L_20
L_21:
	LD	A,(IX+-12)
	SEXT	HL
	LD	L,(IX+-12)
	LD	IY,(IX+-3)
	LD	BC,(IY+12)
	ADD	HL,BC
	LD	(IY+12),HL
L_20:
	LD	C,(IX+-11)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	(IX+-12),L
	LD	A,(IX+-12)
	CP	A,-1
	JR	NZ,L_21
	LD	C,(IX+-10)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_23
	LD	BC,(IX+-5)
	CALL	__stoiu
	PUSH	HL
	LD	BC,150
	PUSH	BC
	LD	BC,L__35
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	JR	L_25
L_23:
	LD	BC,(IX+-5)
	CALL	__stoiu
	PUSH	HL
	LD	BC,150
	PUSH	BC
	LD	BC,L__36
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
L_25:
	LD	C,(IX+-11)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	IY,(IX+-5)
	LEA	HL,IY+12
	LD	(IX+-5),L
	LD	(IX+-4),H
	LD	BC,(IX+-5)
	LD.LIS	HL,227
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_31
L_26:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_26
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,227
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,13
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-5),13
	LD	(IX+-4),0
L_31:
	LD	A,(IX+-9)
	SEXT	HL
	LD	L,(IX+-9)
	LD	BC,HL
	LEA	HL,IX+-18
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-21
	CALL	_ti_DetectVar
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-8),HL
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_32
	INC	(IX+-9)
L_35:
	LD	A,(IX+-9)
	CP	A,2
	JR	C,L_33
	LD	C,(IX+-10)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_ti_SetArchiveStatus
	POP	BC
	POP	BC
	LD	C,(IX+-10)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_free
	POP	BC
L_38:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_38
	LD	SP,IX
	POP	IX
	RET	


;**************************** _av_CheckSumAll ***************************
;Name                         Addr/Register   Size   Type
;_ti_SetArchiveStatus                IMPORT  -----   function
;_ti_DetectVar                       IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_free                               IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_ti_GetC                            IMPORT  -----   function
;_strcpy                             IMPORT  -----   function
;_ti_GetSize                         IMPORT  -----   function
;_memset                             IMPORT  -----   function
;_ti_OpenVar                         IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_ti_Write                           IMPORT  -----   function
;_boot_GetDate                       IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;_ScanDB                             STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_0temp17                            STATIC      2   variable
;search_pos                           IX-21      3   variable
;searchtypes                          IX-18      2   variable
;modified                             IX-16      4   variable
;tempread                             IX-12      1   variable
;progdata                             IX-11      1   variable
;avData                               IX-10      1   variable
;i                                     IX-9      1   variable
;progname                              IX-8      3   variable
;ypos                                  IX-5      2   variable
;program                               IX-3      3   variable


; Stack Frame Size: 27 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__26:
	DB	"w"
	DB	0
L__27:
	DB	"Checksumming Programs..."
	DB	0
L__28:
	DB	"#"
	DB	0
L__30:
	DB	"!"
	DB	0
L__32:
	DB	"r"
	DB	0
L__35:
	DB	"success"
	DB	0
L__36:
	DB	"failed"
	DB	0
	SEGMENT TEXT
_0temp17:
	DB	5
	DB	6
	SEGMENT CODE
_av_ScanAll:
	LD	HL,-486
	CALL	__frameset
	CALL	_ti_CloseAll
	LD	BC,L__43
	PUSH	BC
	LD	BC,(_VDefs)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-1),A
	OR	A,A
	JR	NZ,L_42
	LD	A,1
	JR	L_70
L_42:
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,4
	PUSH	BC
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_43
	LD	A,2
	JR	L_70
L_43:
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetTextConfig
	POP	BC
	JR	L_67
L_68:
	LD	IY,IX
	LEA	DE,IX+-18
	LD	HL,_1temp44
	LD	BC,2
	LDIR	
	LD	HL,_2temp45
	LD	BC,459
	LD	DE,-486
	ADD	IY,DE
	LD	DE,IY
	LDIR	
	CALL	_gfx_ZeroScreen
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	LD	HL,IX
	LD	BC,-486
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	HL,IX
	LD	BC,-486
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	BC,-386
	CALL	__istix
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,-386
	CALL	__ildix
	PUSH	HL
	LD	HL,IX
	LD	BC,-383
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	(IX+-27),HL
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-27)
	PUSH	BC
	LD	HL,IX
	LD	BC,-283
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,L__46
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,12
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	HL,IX
	LD	BC,-283
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,320
	PUSH	BC
	LD	BC,24
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,18
	LD	(IX+-9),BC
	LD	(IX+-2),0
	JR	L_63
L_61:
	LD	BC,0
	LD	(IX+-24),BC
	LD	(IX+-16),BC
	JR	L_59
L_60:
	LD	BC,L__47
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_59
	LD	BC,L__49
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_59
	LD	BC,L__51
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_strcmp
	POP	BC
	POP	BC
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L_59
	LD	HL,IX
	LD	BC,-383
	ADD	HL,BC
	LD	(IX+-12),HL
	LD	(IX+-3),0
	LD	A,(IX+-2)
	SEXT	HL
	LD	L,(IX+-2)
	LD	BC,HL
	LEA	HL,IX+-18
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,L__53
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_ti_OpenVar
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-13),A
	JR	L_55
L_56:
	LD	HL,(IX+-12)
	LD	A,(HL)
	LD	B,(IX+-16)
	CP	A,B
	JR	NZ,L_54
	INC	(IX+-3)
	LD	A,(IX+-3)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	BC,-386
	CALL	__ildix
	OR	A,A
	SBC	HL,DE
	JR	NZ,L_52
	LD	IY,(IX+-9)
	LEA	IY,IY+12
	LD	(IX+-9),IY
	LD	BC,IY
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	JR	L_57
L_52:
	LD	BC,(IX+-12)
	INC	BC
	LD	(IX+-12),BC
	JR	L_55
L_54:
	LD	HL,IX
	LD	BC,-383
	ADD	HL,BC
	LD	(IX+-12),HL
	LD	(IX+-3),0
L_55:
	LD	C,(IX+-13)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	(IX+-16),HL
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_56
L_57:
	LD	C,(IX+-13)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
L_59:
	LD	A,(IX+-2)
	SEXT	HL
	LD	L,(IX+-2)
	LD	BC,HL
	LEA	HL,IX+-18
	ADD	HL,BC
	LD	C,(HL)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-24
	CALL	_ti_DetectVar
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-6),HL
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_60
	INC	(IX+-2)
L_63:
	LD	A,(IX+-2)
	CP	A,2
	JR	C,L_61
	LD	IY,(IX+-9)
	LEA	IY,IY+10
	LD	(IX+-9),IY
	LD	BC,IY
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,L__59
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
L_66:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_66
L_67:
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	(IX+-21),HL
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_68
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_ti_SetArchiveStatus
	POP	BC
	POP	BC
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	LD	BC,2
	PUSH	BC
	CALL	_gfx_SetTextConfig
	POP	BC
	XOR	A,A
L_70:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _av_ScanAll ***************************
;Name                         Addr/Register   Size   Type
;_ti_SetArchiveStatus                IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_ti_DetectVar                       IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_ti_OpenVar                         IMPORT  -----   function
;_strcmp                             IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_PrintString                    IMPORT  -----   function
;_ti_GetC                            IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_ti_Read                            IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_2temp45                            STATIC    459   variable
;_1temp44                            STATIC      2   variable
;_gfx_SetTextConfig                  IMPORT  -----   function
;_ti_Seek                            IMPORT  -----   function
;_VDefs                              STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;optemp                              IX-486    459   variable
;descsize                             IX-27      3   variable
;search_pos                           IX-24      3   variable
;opstrsize                            IX-21      3   variable
;searchtypes                          IX-18      2   variable
;tempread                             IX-16      3   variable
;tempfile                             IX-13      1   variable
;searchloc                            IX-12      3   variable
;ypos                                  IX-9      3   variable
;progname                              IX-6      3   variable
;hits                                  IX-3      1   variable
;i                                     IX-2      1   variable
;avDefs                                IX-1      1   variable


; Stack Frame Size: 492 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__43:
	DB	"r"
	DB	0
L__46:
	DB	"h"
	DB	0
L__47:
	DB	"#"
	DB	0
L__49:
	DB	"!"
	DB	0
L__51:
	DB	"BLASTCSS"
	DB	0
L__53:
	DB	"r"
	DB	0
L__59:
	DB	"Search complete. Any key to proceed..."
	DB	0
	SEGMENT TEXT
_1temp44:
	DB	5
	DB	6
_2temp45:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT CODE
_pgrm_DrawSplashScreen:
	LD	HL,-15
	CALL	__frameset
	CALL	_ti_CloseAll
	CALL	_gfx_ZeroScreen
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
	LD	BC,4
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
	LD	BC,20
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,(_ProgName)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
	LD	BC,55
	PUSH	BC
	LD	BC,100
	PUSH	BC
	LD	BC,(_SubName)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,10
	PUSH	BC
	LD	BC,5
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
	LD	BC,L__63
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,(_Version)
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,_malloc
	PUSH	BC
	LD	BC,64
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-3),HL
	LD	BC,HL
	PUSH	BC
	LD	BC,_blast_logo_compressed
	PUSH	BC
	CALL	_dzx7_Standard
	POP	BC
	POP	BC
	LD	BC,_malloc
	PUSH	BC
	LD	BC,96
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-7),HL
	LD	IY,(IX+-7)
	LD	A,96
	LD	(IY+0),A
	LD	(IY+1),A
	LD	BC,HL
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ScaleSprite
	POP	BC
	POP	BC
	LD	BC,90
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-7)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,200
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__64
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,212
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,L__66
	PUSH	BC
	LD	BC,(_ScanDB)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
	OR	A,A
	JR	Z,L_74
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,4
	PUSH	BC
	PEA	IX+-11
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,2
	PUSH	BC
	LD	A,(IX+-11)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,L__68
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,2
	PUSH	BC
	LD	A,(IX+-10)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,L__69
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,4
	PUSH	BC
	LD	BC,(IX+-9)
	CALL	__stoiu
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,7
	PUSH	BC
	PEA	IX+-11
	CALL	_time_IsFileOutdated
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_72
	LD	BC,_malloc
	PUSH	BC
	LD	BC,11
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-3),HL
	LD	BC,HL
	PUSH	BC
	LD	BC,_warning_compressed
	PUSH	BC
	CALL	_dzx7_Standard
	POP	BC
	POP	BC
	LD	BC,210
	PUSH	BC
	LD	BC,16
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
L_72:
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	JR	L_75
L_74:
	LD	BC,L__71
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
L_75:
	LD	BC,224
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__72
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,L__73
	PUSH	BC
	LD	BC,(_VDefs)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-4),A
	OR	A,A
	JR	Z,L_79
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,4
	PUSH	BC
	PEA	IX+-15
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,2
	PUSH	BC
	LD	A,(IX+-15)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,L__75
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,2
	PUSH	BC
	LD	A,(IX+-14)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,L__76
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
	LD	BC,4
	PUSH	BC
	LD	BC,(IX+-13)
	CALL	__stoiu
	PUSH	HL
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
	LD	BC,30
	PUSH	BC
	PEA	IX+-15
	CALL	_time_IsFileOutdated
	POP	BC
	POP	BC
	OR	A,A
	JR	Z,L_77
	LD	BC,_malloc
	PUSH	BC
	LD	BC,11
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-3),HL
	LD	BC,HL
	PUSH	BC
	LD	BC,_warning_compressed
	PUSH	BC
	CALL	_dzx7_Standard
	POP	BC
	POP	BC
	LD	BC,222
	PUSH	BC
	LD	BC,16
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
L_77:
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	JR	L_80
L_79:
	LD	BC,L__78
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
L_80:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _pgrm_DrawSplashScreen ***************************
;Name                         Addr/Register   Size   Type
;_VDefs                              STATIC      3   variable
;_ti_Close                           IMPORT  -----   function
;_warning_compressed                 IMPORT     38   variable
;_time_IsFileOutdated                IMPORT  -----   function
;_gfx_PrintUInt                      IMPORT  -----   function
;_ti_Read                            IMPORT  -----   function
;_ScanDB                             STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_free                               IMPORT  -----   function
;_gfx_Sprite                         IMPORT  -----   function
;_gfx_ScaleSprite                    IMPORT  -----   function
;_blast_logo_compressed              IMPORT    329   variable
;_dzx7_Standard                      IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;_Version                            STATIC      3   variable
;_gfx_PrintString                    IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_SubName                            STATIC      3   variable
;_ProgName                           STATIC      3   variable
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_gfx_SetTextBGColor                 IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;modified                             IX-15      4   variable
;modified                             IX-11      4   variable
;scaled                                IX-7      3   variable
;avData                                IX-4      1   variable
;uncompressed                          IX-3      3   variable


; Stack Frame Size: 21 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__63:
	DB	"v"
	DB	0
L__64:
	DB	"Firewall State: Offline"
	DB	0
L__65:
	DB	"Attributes File: "
	DB	0
L__66:
	DB	"r"
	DB	0
L__68:
	DB	"-"
	DB	0
L__69:
	DB	"-"
	DB	0
L__71:
	DB	"none"
	DB	0
L__72:
	DB	"Definitions File: "
	DB	0
L__73:
	DB	"r"
	DB	0
L__75:
	DB	"-"
	DB	0
L__76:
	DB	"-"
	DB	0
L__78:
	DB	"none"
	DB	0
	SEGMENT CODE
_time_IsFileOutdated:
	LD	HL,-6
	CALL	__frameset
	LD	BC,(_systemtime+5)
	CALL	__stoiu
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	DE,HL
	LD	A,(_systemtime+4)
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,DE
	LD	BC,HL
	LD	A,(_systemtime+3)
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-3),HL
	LD	IY,(IX+6)
	LD	BC,(IY+2)
	CALL	__stoiu
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,BC
	LD	A,(IY+0)
	LD	DE,HL
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,DE
	LD	A,(IY+1)
	LD	BC,HL
	UEXT	HL
	LD	L,A
	ADD	HL,BC
	LD	(IX+-6),HL
	LD	BC,HL
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	LD	BC,HL
	LD	A,(IX+9)
	UEXT	HL
	LD	L,A
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC	HL,DE
	JR	C,L_82
	LD	A,1
	JR	L_83
L_82:
	XOR	A,A
L_83:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _time_IsFileOutdated ***************************
;Name                         Addr/Register   Size   Type
;_systemtime                         STATIC      7   variable
;filedays                              IX-6      3   variable
;systemdays                            IX-3      3   variable
;maxAge                                IX+9      1   parameter
;file                                  IX+6      3   parameter


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


_pgrm_DrawMainMenu:
	LD	HL,-2
	CALL	__frameset
	LD	(IX+-1),1
	LD	(IX+-2),0
	CALL	_ti_CloseAll
	LD	BC,86
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__82
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,135
	PUSH	BC
	LD	BC,96
	PUSH	BC
	LD	BC,130
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,100
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__83
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,112
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__84
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,124
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__85
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,136
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__86
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,148
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__87
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,160
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__88
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,3
	PUSH	BC
	LD	BC,103
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
	JR	L_97
L_98:
	LD	A,(IX+-2)
	OR	A,A
	JR	Z,L_88
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,3
	PUSH	BC
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+91
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
L_88:
	LD	A,(IX+-2)
	CP	A,4
	JR	NZ,L_92
	DEC	(IX+-1)
	LD	A,(IX+-1)
	CP	A,1
	JP	P,L_92
	LD	(IX+-1),6
L_92:
	LD	A,(IX+-2)
	CP	A,1
	JR	NZ,L_94
	INC	(IX+-1)
	LD	A,6
	CP	A,(IX+-1)
	JP	P,L__97
	JP	PE,L_94
	JR	L__98
L__97:
	JP	PO,L_94
L__98:
	LD	(IX+-1),1
L_94:
	LD	A,(IX+-2)
	OR	A,A
	JR	Z,L_96
	LD	BC,3
	PUSH	BC
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+91
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
L_96:
	LD	A,(IX+-2)
	CP	A,15
	JR	NZ,L_97
	LD	(IX+-1),6
	JR	L_99
L_97:
	CALL	_os_GetCSC
	LD	(IX+-2),A
	CP	A,9
	JR	NZ,L_98
L_99:
	LD	A,(IX+-1)
	LD	SP,IX
	POP	IX
	RET	


;**************************** _pgrm_DrawMainMenu ***************************
;Name                         Addr/Register   Size   Type
;_os_GetCSC                          IMPORT  -----   function
;_gfx_FillCircle                     IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;key                                   IX-2      1   variable
;selected                              IX-1      1   variable


; Stack Frame Size: 8 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__82:
	DB	"BLASTCSS MAIN MENU"
	DB	0
L__83:
	DB	"Scan Programs"
	DB	0
L__84:
	DB	"Verify Attributes"
	DB	0
L__85:
	DB	"Update Attributes File"
	DB	0
L__86:
	DB	"Advanced Settings"
	DB	0
L__87:
	DB	"About"
	DB	0
L__88:
	DB	"Exit"
	DB	0
	SEGMENT CODE
_pgrm_DrawSettingsMenu:
	LD	HL,-11
	CALL	__frameset
	LD	(IX+-1),1
	LD	(IX+-2),0
	CALL	_ti_CloseAll
	CALL	_gfx_ZeroScreen
	CALL	_pgrm_DrawSplashScreen
	LD	BC,98
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__100
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,166
	PUSH	BC
	LD	BC,108
	PUSH	BC
	LD	BC,130
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,112
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__101
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,124
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__102
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,136
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__103
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,148
	PUSH	BC
	LD	BC,130
	PUSH	BC
	LD	BC,L__104
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	CALL	_showBoxes
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,3
	PUSH	BC
	LD	BC,115
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	JR	L_132
L_133:
	LD	A,(IX+-2)
	OR	A,A
	JR	Z,L_105
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,3
	PUSH	BC
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+103
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
L_105:
	LD	A,(IX+-2)
	CP	A,4
	JR	NZ,L_109
	DEC	(IX+-1)
	LD	A,(IX+-1)
	CP	A,1
	JP	P,L_109
	LD	(IX+-1),4
L_109:
	LD	A,(IX+-2)
	CP	A,1
	JR	NZ,L_127
	INC	(IX+-1)
	LD	A,4
	CP	A,(IX+-1)
	JP	P,L__121
	JP	PE,L_127
	JR	L__122
L__121:
	JP	PO,L_127
L__122:
	LD	(IX+-1),1
L_127:
	LD	A,(IX+-2)
	CP	A,9
	JR	NZ,L_129
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	BC,HL
L__112:
	LD	DE,1
	OR	A,A
	SBC	HL,DE
	JR	C,L_129
	LD	HL,4
	OR	A,A
	SBC	HL,BC
	JR	C,L_129
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	LD	BC,L__111-3
	ADD	HL,BC
	LD	HL,(HL)
	JP	(HL)
L__111:
	DW24	L_110	

	DW24	L_115	

	DW24	L_120	

	DW24	L_125	

L_110:
	LD	A,(_settingsSave+7)
	OR	A,A
	JR	NZ,L_112
	LD	BC,1
	LD	(IX+-8),BC
	JR	L_113
L_112:
	LD	BC,0
	LD	(IX+-8),BC
L_113:
	LD	A,(IX+-8)
	LD	(_settingsSave+7),A
	CALL	_showBoxes
	JR	L_129
L_115:
	LD	A,(_settingsSave+8)
	OR	A,A
	JR	NZ,L_117
	LD	BC,1
	LD	(IX+-11),BC
	JR	L_118
L_117:
	LD	BC,0
	LD	(IX+-11),BC
L_118:
	LD	A,(IX+-11)
	LD	(_settingsSave+8),A
	CALL	_showBoxes
	JR	L_129
L_120:
	LD	A,(_settingsSave+9)
	OR	A,A
	JR	NZ,L_122
	LD	BC,1
	LD	(IX+-5),BC
	JR	L_123
L_122:
	LD	BC,0
	LD	(IX+-5),BC
L_123:
	LD	A,(IX+-5)
	LD	(_settingsSave+9),A
	CALL	_showBoxes
	JR	L_129
L_125:
	LD	(IX+-2),15
L_129:
	LD	A,(IX+-2)
	OR	A,A
	JR	Z,L_131
	LD	BC,3
	PUSH	BC
	LD	A,(IX+-1)
	SEXT	HL
	LD	L,(IX+-1)
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	IY,HL
	LEA	BC,IY+103
	PUSH	BC
	LD	BC,120
	PUSH	BC
	CALL	_gfx_FillCircle
	POP	BC
	POP	BC
	POP	BC
L_131:
	LD	A,(IX+-2)
	CP	A,15
	JR	NZ,L_132
	CALL	_pgrm_SaveSettings
	CALL	_pgrm_ApplySettings
L_132:
	CALL	_os_GetCSC
	LD	(IX+-2),A
	CP	A,15
	JR	NZ,L_133
	LD	SP,IX
	POP	IX
	RET	


;**************************** _pgrm_DrawSettingsMenu ***************************
;Name                         Addr/Register   Size   Type
;_os_GetCSC                          IMPORT  -----   function
;_pgrm_ApplySettings                 IMPORT  -----   function
;_pgrm_SaveSettings                  IMPORT  -----   function
;_settingsSave                       STATIC     10   variable
;_gfx_FillCircle                     IMPORT  -----   function
;_showBoxes                          IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_pgrm_DrawSplashScreen              IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;temp119                              IX-11      3   variable
;temp114                               IX-8      3   variable
;temp124                               IX-5      3   variable
;key                                   IX-2      1   variable
;selected                              IX-1      1   variable


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__100:
	DB	"BLASTCSS SETTINGS MENU"
	DB	0
L__101:
	DB	"Enable Smart-Detect"
	DB	0
L__102:
	DB	"Enable Firewall"
	DB	0
L__103:
	DB	"Enable Quarantine"
	DB	0
L__104:
	DB	"Main Menu"
	DB	0
	SEGMENT CODE
_pgrm_ApplySettings:
	LD	A,(_settingsSave+7)
	CP	A,1
	JR	NZ,L_137
	CALL	_SetHook
L_137:
	LD	A,(_settingsSave+7)
	OR	A,A
	JR	NZ,L_138
	CALL	_RemoveHook
L_138:
	RET	


;**************************** _pgrm_ApplySettings ***************************
;Name                         Addr/Register   Size   Type
;_RemoveHook                         IMPORT  -----   function
;_SetHook                            IMPORT  -----   function
;_settingsSave                       STATIC     10   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


_pgrm_SaveSettings:
	LD	HL,-1
	CALL	__frameset
	CALL	_ti_CloseAll
	LD	BC,L__127
	PUSH	BC
	LD	BC,(_AVSettings)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-1),A
	OR	A,A
	JR	Z,L_142
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,_settingsSave
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_ti_SetArchiveStatus
	POP	BC
	POP	BC
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	JR	L_143
L_142:
	LD	BC,L__129
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
L_140:
	CALL	_os_GetCSC
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,9
	SBC	HL,BC
	JR	NZ,L_140
L_143:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _pgrm_SaveSettings ***************************
;Name                         Addr/Register   Size   Type
;_os_GetCSC                          IMPORT  -----   function
;_gfx_PrintString                    IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_ti_SetArchiveStatus                IMPORT  -----   function
;_settingsSave                       STATIC     10   variable
;_ti_Write                           IMPORT  -----   function
;_AVSettings                         STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;settings                              IX-1      1   variable


; Stack Frame Size: 7 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__127:
	DB	"w"
	DB	0
L__129:
	DB	"failed to open file"
	DB	0
	SEGMENT CODE
_showBoxes:
	LD	HL,-6
	CALL	__frameset
	LD	BC,_malloc
	PUSH	BC
	LD	BC,8
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-3),HL
	LD	BC,HL
	PUSH	BC
	LD	BC,_funcoff_compressed
	PUSH	BC
	CALL	_dzx7_Standard
	POP	BC
	POP	BC
	LD	BC,_malloc
	PUSH	BC
	LD	BC,8
	PUSH	BC
	PUSH	BC
	CALL	_gfx_AllocSprite
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-6),HL
	LD	BC,HL
	PUSH	BC
	LD	BC,_funcon_compressed
	PUSH	BC
	CALL	_dzx7_Standard
	POP	BC
	POP	BC
	LD	A,(_settingsSave+7)
	OR	A,A
	JR	Z,L_145
	LD	BC,112
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	JR	L_148
L_145:
	LD	BC,112
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
L_148:
	LD	A,(_settingsSave+8)
	OR	A,A
	JR	Z,L_147
	LD	BC,124
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	JR	L_151
L_147:
	LD	BC,124
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
L_151:
	LD	A,(_settingsSave+9)
	OR	A,A
	JR	Z,L_150
	LD	BC,136
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
	JR	L_152
L_150:
	LD	BC,136
	PUSH	BC
	LD	BC,280
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_Sprite
	POP	BC
	POP	BC
	POP	BC
L_152:
	LD	BC,(IX+-6)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	SP,IX
	POP	IX
	RET	


;**************************** _showBoxes ***************************
;Name                         Addr/Register   Size   Type
;_free                               IMPORT  -----   function
;_gfx_Sprite                         IMPORT  -----   function
;_settingsSave                       STATIC     10   variable
;_funcon_compressed                  IMPORT      8   variable
;_funcoff_compressed                 IMPORT      8   variable
;_dzx7_Standard                      IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_AllocSprite                    IMPORT  -----   function
;uncompressed_on                       IX-6      3   variable
;uncompressed_off                      IX-3      3   variable


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


_av_ValidateSaved:
	LD	HL,-17
	CALL	__frameset
	CALL	_ti_CloseAll
	LD	BC,L__136
	PUSH	BC
	LD	BC,(_ScanDB)
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-6),A
	OR	A,A
	JR	NZ,L_156
	LD	A,1
	JR	L_178
L_156:
	LD	C,(IX+-6)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,4
	PUSH	BC
	CALL	_ti_Seek
	POP	BC
	POP	BC
	POP	BC
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_157
	LD	A,2
	JR	L_178
L_157:
	CALL	_gfx_ZeroScreen
	LD	BC,0
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__139
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,320
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_HorizLine
	POP	BC
	POP	BC
	POP	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	(IX+-2),5
	LD	(IX+-1),0
	LD	(IX+-8),13
	LD	(IX+-7),0
	JR	L_172
L_173:
	LD	BC,0
	LD	(IX+-13),BC
	LD	BC,15
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-5),HL
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
	LD	BC,15
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(IX+-5)
	PUSH	BC
	CALL	_memset
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-6)
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,(IX+-5)
	PUSH	BC
	CALL	_ti_Read
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	IY,(IX+-5)
	LD	C,(IY+0)
	LD	B,0
	PUSH	BC
	LD	BC,L__140
	PUSH	BC
	PEA	IY+3
	CALL	_ti_OpenVar
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-9),A
	OR	A,A
	JR	Z,L_172
	LD	BC,(IX+-8)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+-2)
	CALL	__stoiu
	PUSH	HL
	LD	IY,(IX+-5)
	PEA	IY+3
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	HL,(IX+-2)
	LD.LIS	DE,150
	ADD.SIS	HL,DE
	LD	(IX+-2),L
	LD	(IX+-1),H
	LD	C,(IX+-9)
	LD	B,0
	LD	DE,(IX+-5)
	PUSH	BC
	LD	(IX+-16),DE
	LD	(IX+-17),D
	CALL	_ti_GetSize
	LD	DE,(IX+-16)
	LD	D,(IX+-17)
	POP	BC
	LD	BC,HL
	LD	IY,DE
	LD	HL,(IY+1)
	OR	A,A
	SBC.SIS	HL,BC
	JR	NZ,L_159
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
	JR	L_160
L_159:
	LD	BC,192
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
L_160:
	LD	BC,(IX+-8)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+-2)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__143
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	IY,(IX+-2)
	LEA	HL,IY+75
	LD	(IX+-2),L
	LD	(IX+-1),H
	JR	L_161
L_162:
	LD	A,(IX+-10)
	SEXT	HL
	LD	L,(IX+-10)
	LD	BC,(IX+-13)
	ADD	HL,BC
	LD	(IX+-13),HL
L_161:
	LD	C,(IX+-9)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	(IX+-10),L
	LD	A,(IX+-10)
	CP	A,-1
	JR	NZ,L_162
	LD	BC,(IX+-13)
	LD	IY,(IX+-5)
	LD	HL,(IY+12)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_164
	LD	BC,135
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
	JR	L_166
L_164:
	LD	BC,192
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
L_166:
	LD	BC,(IX+-8)
	CALL	__stoiu
	PUSH	HL
	LD	BC,(IX+-2)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__146
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
	LD	C,(IX+-9)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	LD	BC,(IX+-5)
	PUSH	BC
	CALL	_free
	POP	BC
	LD	(IX+-2),5
	LD	(IX+-1),0
	LD	IY,(IX+-8)
	LEA	HL,IY+12
	LD	(IX+-8),L
	LD	(IX+-7),H
	LD	BC,(IX+-8)
	LD.LIS	HL,227
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_172
L_167:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_167
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
	LD	BC,227
	PUSH	BC
	LD	BC,320
	PUSH	BC
	LD	BC,13
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-8),12
	LD	(IX+-7),0
L_172:
	LD	C,(IX+-6)
	LD	B,0
	PUSH	BC
	CALL	_ti_Tell
	POP	BC
	LD	C,(IX+-6)
	LD	B,0
	PUSH	BC
	LD	BC,HL
	LD	(IX+-16),BC
	CALL	_ti_GetSize
	LD	BC,(IX+-16)
	POP	DE
	LD	DE,HL
	LD	HL,BC
	OR	A,A
	SBC.SIS	HL,DE
	JR	C,L_173
L_175:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_175
	LD	C,(IX+-6)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
	XOR	A,A
;   62		/* Fill in the body of the main function here */
;   63	    char option;
;   64	    ti_var_t settings;
;   65	    time_struct_t *savedtime = &settingsSave.savedtime;
;   66	    asm_RunIndicOff();
;   67	    gfx_Begin();
;   68	    gfx_SetClipRegion(0, 0, 320, 240);
;   69	    ti_CloseAll();
;   70	    if(settings = ti_Open(AVSettings, "r")){
;   71	        ti_Read(&settingsSave, sizeof(settings_save_t), 1, settings);
;   72	        ti_Close(settings);
;   73	    }
;   74	        // check and restore or save date
;   75	    boot_GetDate(&systemtime.day, &systemtime.month, &systemtime.year);
;   76	    boot_GetTime(&systemtime.sec, &systemtime.min, &systemtime.hour);
;   77	    if( systemtime.year < savedtime->year ) {
;   78	        boot_SetDate(savedtime->day, savedtime->month, savedtime->year);
L_178:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _av_ValidateSaved ***************************
;Name                         Addr/Register   Size   Type
;_ti_Tell                            IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_free                               IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_ti_GetC                            IMPORT  -----   function
;_ti_GetSize                         IMPORT  -----   function
;_ti_OpenVar                         IMPORT  -----   function
;_ti_Read                            IMPORT  -----   function
;_memset                             IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;_gfx_HorizLine                      IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_ti_Seek                            IMPORT  -----   function
;_ScanDB                             STATIC      3   variable
;_ti_Open                            IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;checksum                             IX-13      3   variable
;tempread                             IX-10      1   variable
;progdata                              IX-9      1   variable
;ypos                                  IX-8      2   variable
;avData                                IX-6      1   variable
;program                               IX-5      3   variable
;xpos                                  IX-2      2   variable


; Stack Frame Size: 23 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__136:
	DB	"r"
	DB	0
L__139:
	DB	"Verifying Checksums..."
	DB	0
L__140:
	DB	"r"
	DB	0
L__143:
	DB	"size"
	DB	0
L__146:
	DB	"checksum"
	DB	0
	XREF _funcon_compressed:ROM
	XREF _funcoff_compressed:ROM
	XREF _warning_compressed:ROM
	XREF _blast_logo_compressed:ROM
	XREF _RemoveHook:ROM
	XREF _SetHook:ROM
	XREF _dzx7_Standard:ROM
	XREF _ti_SetArchiveStatus:ROM
	XREF _ti_GetSize:ROM
	XREF _ti_Tell:ROM
	XREF _ti_Seek:ROM
	XREF _ti_GetC:ROM
	XREF _ti_Read:ROM
	XREF _ti_Write:ROM
	XREF _ti_DetectVar:ROM
	XREF _ti_Close:ROM
	XREF _ti_OpenVar:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _gfx_SetClipRegion:ROM
	XREF _gfx_ScaleSprite:ROM
	XREF _gfx_Sprite:ROM
	XREF _gfx_SetTextBGColor:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_SetTextConfig:ROM
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_PrintUInt:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_FillCircle:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_HorizLine:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _gfx_AllocSprite:ROM
	XREF _strcmp:ROM
	XREF _strcpy:ROM
	XREF _memset:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCDFull:ROM
	XREF _asm_RunIndicOff:ROM
	XREF _os_GetCSC:ROM
	XREF _boot_GetTime:ROM
	XREF _boot_SetTime:ROM
	XREF _boot_GetDate:ROM
	XREF _boot_SetDate:ROM
	XREF __stoiu:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __frameset:ROM
	XDEF _av_ValidateSaved
	XDEF _showBoxes
	XDEF _pgrm_SaveSettings
	XDEF _pgrm_ApplySettings
	XDEF _pgrm_DrawSettingsMenu
	XDEF _pgrm_DrawMainMenu
	XDEF _time_IsFileOutdated
	XDEF _pgrm_DrawSplashScreen
	XDEF _av_ScanAll
	XDEF _av_CheckSumAll
	XDEF _main
	XDEF _settingsSave
	XDEF _systemtime
	XDEF _Version
	XDEF _SubName
	XDEF _ProgName
	XDEF _AVSettings
	XDEF _VDefs
	XDEF _ScanDB
	END
